bool SEND_TRIGGERS;

enum TriggerType
{
	START_EXPERIMENT = 100,

	//THROWS  
	HUMAN_TO_HUMAN = 1, 
	HUMAN_TO_LEFT = 2,
	HUMAN_TO_MIDDLE = 3,
	HUMAN_TO_RIGHT = 4,

	LEFT_TO_HUMAN = 5,
	LEFT_TO_LEFT = 6,
	LEFT_TO_MIDDLE = 7,
	LEFT_TO_RIGHT = 8,

	MIDDLE_TO_HUMAN = 9,
	MIDDLE_TO_LEFT = 10,
	MIDDLE_TO_MIDDLE = 11,
	MIDDLE_TO_RIGHT = 12,
	
	RIGHT_TO_HUMAN = 13,
	RIGHT_TO_LEFT = 14,
	RIGHT_TO_MIDDLE = 15,
	RIGHT_TO_RIGHT = 16,

	// RATING
	RATING_QUESTION_ID1 = 21,
	RATING_QUESTION_ID2 = 22,
	RATING_QUESTION_ID3 = 23,
	RATING_QUESTION_ID4 = 24,
	RATING_QUESTION_ID5 = 25,
	RATING_QUESTION_ID6 = 26,

	// BLOCK
	BLOCK_START_FAIR = 30,
	BLOCK_FAIR_EXCLUSION = 31, //not used, just pretty.
	BLOCK_END_FAIR = 32,

	BLOCK_START_UNFAIR1 = 40,
	BLOCK_UNFAIR1_EXCLUSION = 41,
	BLOCK_END_UNFAIR1 = 42,

	BLOCK_START_UNFAIR2 = 50,
	BLOCK_UNFAIR2_EXCLUSION = 51,
	BLOCK_END_UNFAIR2 = 52,
	
	BLOCK_START_PROSOCIAL= 60,
	BLOCK_PROSOCIAL_EXCLUSION = 61,
	BLOCK_END_PROSOCIAL = 62,

	END_EXPERIMENT = 101,
}

TriggerType[..][..] THROW_TRIGGERS =
{
	{
		HUMAN_TO_HUMAN ,
		HUMAN_TO_LEFT,
		HUMAN_TO_MIDDLE,
		HUMAN_TO_RIGHT,
	},
	{
		LEFT_TO_HUMAN,
		LEFT_TO_LEFT,
		LEFT_TO_MIDDLE,
		LEFT_TO_RIGHT,
	},
	{
		MIDDLE_TO_HUMAN,
		MIDDLE_TO_LEFT,
		MIDDLE_TO_MIDDLE,
		MIDDLE_TO_RIGHT,
	},
	{
		RIGHT_TO_HUMAN,
		RIGHT_TO_LEFT,
		RIGHT_TO_MIDDLE,
		RIGHT_TO_RIGHT,
	},
};

TriggerType[..] RATING_TRIGGERS_PER_ID = 
{
	RATING_QUESTION_ID1,
	RATING_QUESTION_ID2,
	RATING_QUESTION_ID3,
	RATING_QUESTION_ID4,
	RATING_QUESTION_ID5,
	RATING_QUESTION_ID6,
};

enum RoundStatus
{
	START,
	EXCLUSION,
	END
}

TriggerType[..][..] ROUND_TRIGGERS = 
{
	{
		BLOCK_START_FAIR ,
		BLOCK_FAIR_EXCLUSION,
		BLOCK_END_FAIR,
	},
	{
		BLOCK_START_UNFAIR1,
		BLOCK_UNFAIR1_EXCLUSION,
		BLOCK_END_UNFAIR1,
	},
	{
		BLOCK_START_UNFAIR2,
		BLOCK_UNFAIR2_EXCLUSION ,
		BLOCK_END_UNFAIR2,
	},
	{
		BLOCK_START_PROSOCIAL,
		BLOCK_PROSOCIAL_EXCLUSION,
		BLOCK_END_PROSOCIAL,
	}
};